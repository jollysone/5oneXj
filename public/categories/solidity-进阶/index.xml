<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Solidity 进阶 - 分类 - 专注于区块链智能合约开发和审计 | 5oneXj′s Blog</title>
        <link>/categories/solidity-%E8%BF%9B%E9%98%B6.html</link>
        <description>Solidity 进阶 - 分类 - 专注于区块链智能合约开发和审计 | 5oneXj′s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>jollysone@gmail.com (5oneXj)</managingEditor>
            <webMaster>jollysone@gmail.com (5oneXj)</webMaster><lastBuildDate>Wed, 15 Dec 2021 11:12:14 &#43;0800</lastBuildDate><atom:link href="/categories/solidity-%E8%BF%9B%E9%98%B6.html" rel="self" type="application/rss+xml" /><item>
    <title>合约开发中的异常处理Try Catch</title>
    <link>/posts/solidity-try-catch.html</link>
    <pubDate>Wed, 15 Dec 2021 11:12:14 &#43;0800</pubDate>
    <author>5oneXj</author>
    <guid>/posts/solidity-try-catch.html</guid>
    <description><![CDATA[引言 try-catch是现代编程语言几乎都有的处理异常的一种标准方式，solidity0.6版本也添加了它。这一讲，我们将介绍如何利用try]]></description>
</item>
<item>
    <title>合约中函数选择器Selector介绍</title>
    <link>/posts/solidity-selector.html</link>
    <pubDate>Sat, 27 Nov 2021 11:12:14 &#43;0800</pubDate>
    <author>5oneXj</author>
    <guid>/posts/solidity-selector.html</guid>
    <description><![CDATA[selector 当我们调用智能合约时，本质上是向目标合约发送了一段calldata，在remix中发送一次交易后，可以在详细信息中看见input即为此次交]]></description>
</item>
<item>
    <title>Solidity智能合约中的Hash函数</title>
    <link>/posts/solidity-hash.html</link>
    <pubDate>Sun, 14 Nov 2021 11:12:14 &#43;0800</pubDate>
    <author>5oneXj</author>
    <guid>/posts/solidity-hash.html</guid>
    <description><![CDATA[引言 哈希函数（hash function）是一个密码学概念，它可以将任意长度的消息转换为一个固定长度的值，这个值也称作哈希（hash）。 Has]]></description>
</item>
<item>
    <title>合约高级用法之ABI编码解码</title>
    <link>/posts/solidity-abi.html</link>
    <pubDate>Tue, 02 Nov 2021 11:12:14 &#43;0800</pubDate>
    <author>5oneXj</author>
    <guid>/posts/solidity-abi.html</guid>
    <description><![CDATA[引言 ABI (Application Binary Interface，应用二进制接口)是与以太坊智能合约交互的标准。数据基于他们的类型编码；并且由于编码后不包含类型信息，解码时需要]]></description>
</item>
<item>
    <title>开始自毁跑路！删除合约</title>
    <link>/posts/solidity-delete-contract.html</link>
    <pubDate>Fri, 15 Oct 2021 11:12:14 &#43;0800</pubDate>
    <author>5oneXj</author>
    <guid>/posts/solidity-delete-contract.html</guid>
    <description><![CDATA[selfdestruct selfdestruct命令可以用来删除智能合约，并将该合约剩余ETH转到指定地址。selfdestruct是为了应对合约出错的极端情况而]]></description>
</item>
<item>
    <title>如何在合约中创建新合约？</title>
    <link>/posts/solidity-new-contract.html</link>
    <pubDate>Fri, 17 Sep 2021 11:12:14 &#43;0800</pubDate>
    <author>5oneXj</author>
    <guid>/posts/solidity-new-contract.html</guid>
    <description><![CDATA[引言 在以太坊链上，用户（外部账户，EOA）可以创建智能合约，智能合约同样也可以创建新的智能合约。去中心化交易所uniswap就是利用工厂合约]]></description>
</item>
<item>
    <title>低级成员函数Delegatecall委托调用的用法</title>
    <link>/posts/solidity-delegatecall.html</link>
    <pubDate>Sun, 29 Aug 2021 11:12:14 &#43;0800</pubDate>
    <author>5oneXj</author>
    <guid>/posts/solidity-delegatecall.html</guid>
    <description><![CDATA[delegatecall delegatecall与call类似，是solidity中地址类型的低级成员函数。delegate中是委托/代表的意思，那么delega]]></description>
</item>
<item>
    <title>低级成员函数Call与其他合约交互</title>
    <link>/posts/solidity-call.html</link>
    <pubDate>Fri, 13 Aug 2021 11:12:14 &#43;0800</pubDate>
    <author>5oneXj</author>
    <guid>/posts/solidity-call.html</guid>
    <description><![CDATA[Call call 是address类型的低级成员函数，它用来与其他合约交互。它的返回值为(bool, data)，分别对应call是否成功以及目标函数的返回]]></description>
</item>
<item>
    <title>如何调用其他合约？</title>
    <link>/posts/solidity-call-contract.html</link>
    <pubDate>Wed, 04 Aug 2021 11:12:14 &#43;0800</pubDate>
    <author>5oneXj</author>
    <guid>/posts/solidity-call-contract.html</guid>
    <description><![CDATA[import用法 通过源文件相对位置导入，例子： 1 2 3 4 5 6 文件结构 ├── Import.sol └── Yeye.sol // 通过文件相对位置import import &#39;./Yeye.sol&#39;; 通过源文件网址导入网上的]]></description>
</item>
<item>
    <title>发送ETH的三种方式及比较</title>
    <link>/posts/solidity-transfer-eth.html</link>
    <pubDate>Wed, 28 Jul 2021 11:12:14 &#43;0800</pubDate>
    <author>5oneXj</author>
    <guid>/posts/solidity-transfer-eth.html</guid>
    <description><![CDATA[引言 Solidity有三种方法向其他合约发送ETH，他们是：transfer()，send()和call()，其中call()是被鼓励的用法]]></description>
</item>
</channel>
</rss>
