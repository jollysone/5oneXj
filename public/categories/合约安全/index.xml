<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>合约安全 - 分类 - 专注于区块链智能合约开发和审计 | 5oneXj′s Blog</title>
        <link>https://jollysone.github.io/blog/categories/%E5%90%88%E7%BA%A6%E5%AE%89%E5%85%A8/</link>
        <description>合约安全 - 分类 - 专注于区块链智能合约开发和审计 | 5oneXj′s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>jollysone@gmail.com (5oneXj)</managingEditor>
            <webMaster>jollysone@gmail.com (5oneXj)</webMaster><lastBuildDate>Fri, 20 Aug 2021 11:12:14 &#43;0800</lastBuildDate><atom:link href="https://jollysone.github.io/blog/categories/%E5%90%88%E7%BA%A6%E5%AE%89%E5%85%A8/" rel="self" type="application/rss+xml" /><item>
    <title>智能合约中通过 tx.origin 授权引发的不安全问题</title>
    <link>https://jollysone.github.io/blog/20191001/unsafe-problems-caused-by-tx-origin-authorization-in-smart-contracts.html/</link>
    <pubDate>Tue, 01 Oct 2019 17:55:28 &#43;0800</pubDate>
    <author>5oneXj</author>
    <guid>https://jollysone.github.io/blog/20191001/unsafe-problems-caused-by-tx-origin-authorization-in-smart-contracts.html/</guid>
    <description><![CDATA[0x00 前言 在合约代码中，最常用的是使用 msg.sender 来检查授权，但有时由于有些程序员不熟悉 tx.origin 和 msg.sender 的区别，如果使用了 tx.origin 可能导致合约的安全问题。黑客最典型的攻击]]></description>
</item>
<item>
    <title>Solidity智能合约安全：重入攻击</title>
    <link>https://jollysone.github.io/blog/20210820/solidity-smart-contract-security-re-entrancy.html/</link>
    <pubDate>Fri, 20 Aug 2021 11:12:14 &#43;0800</pubDate>
    <author>5oneXj</author>
    <guid>https://jollysone.github.io/blog/20210820/solidity-smart-contract-security-re-entrancy.html/</guid>
    <description><![CDATA[引言 它曾导致以太坊分叉为 ETH 和 ETC（以太经典）。 1 什么是重入攻击？ 重入攻击是智能合约中最常见的一种攻击，攻击者通过合约漏洞（例如fallba]]></description>
</item>
</channel>
</rss>
