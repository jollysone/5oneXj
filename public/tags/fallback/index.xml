<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>fallback - 标签 - 专注于区块链智能合约开发和审计 | 5oneXj′s Blog</title>
        <link>/tags/fallback.html</link>
        <description>fallback - 标签 - 专注于区块链智能合约开发和审计 | 5oneXj′s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>jollysone@gmail.com (5oneXj)</managingEditor>
            <webMaster>jollysone@gmail.com (5oneXj)</webMaster><lastBuildDate>Sun, 23 Oct 2022 11:12:14 &#43;0800</lastBuildDate><atom:link href="/tags/fallback.html" rel="self" type="application/rss+xml" /><item>
    <title>合约安全：拒绝服务漏洞</title>
    <link>/posts/solidity-smart-contract-security-dos-attack.html</link>
    <pubDate>Sun, 23 Oct 2022 11:12:14 &#43;0800</pubDate>
    <author>5oneXj</author>
    <guid>/posts/solidity-smart-contract-security-dos-attack.html</guid>
    <description><![CDATA[引言 智能合约的拒绝服务（Denial of Service, DoS）漏洞，并介绍预防的方法。NFT 项目 Akutar 曾因为 DoS 漏洞损失 11,539 ETH，当时价值 3400 万美元。 1 DoS 在 Web2 中，]]></description>
</item>
<item>
    <title>合约安全：NFT重入攻击</title>
    <link>/posts/solidity-smart-contract-security-nft-re-entrancy.html</link>
    <pubDate>Mon, 22 Aug 2022 10:12:14 &#43;0800</pubDate>
    <author>5oneXj</author>
    <guid>/posts/solidity-smart-contract-security-nft-re-entrancy.html</guid>
    <description><![CDATA[1 NFT重入风险 重入攻击是智能合约中最常见的一种攻击，攻击者通过合约漏洞（例如fallback函数）循环调用合约，将合约中资产转走或铸造大量]]></description>
</item>
<item>
    <title>合约安全：重入攻击</title>
    <link>/posts/solidity-smart-contract-security-re-entrancy.html</link>
    <pubDate>Sat, 20 Aug 2022 11:12:14 &#43;0800</pubDate>
    <author>5oneXj</author>
    <guid>/posts/solidity-smart-contract-security-re-entrancy.html</guid>
    <description><![CDATA[引言 它曾导致以太坊分叉为 ETH 和 ETC（以太经典）。 1 什么是重入攻击？ 重入攻击是智能合约中最常见的一种攻击，攻击者通过合约漏洞（例如fallba]]></description>
</item>
<item>
    <title>合约接收ETH（receive和fallback）</title>
    <link>/posts/solidity-receive-eth.html</link>
    <pubDate>Mon, 19 Jul 2021 11:12:14 &#43;0800</pubDate>
    <author>5oneXj</author>
    <guid>/posts/solidity-receive-eth.html</guid>
    <description><![CDATA[引言 Solidity支持两种特殊的回调函数，receive()和fallback()，他们主要在两种情况下被使用： 接收ETH 处理合约中不存在]]></description>
</item>
</channel>
</rss>
